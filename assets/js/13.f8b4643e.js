(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{204:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),a("p",[t._v("项目模块较多时，需要频繁的注册路由，导致路由配置文件的体积迅速增加。如果没有整体的规划，还会出现路由定义的路径和文件不匹配的问题，删除模块或修改模块名称也需要同步修改路由配置信息。为了解决以上问题，设计了一种自动注册路由的机制。")]),t._v(" "),a("p",[t._v("路由相关信息配置在"),a("code",[t._v("src")]),t._v("下的"),a("code",[t._v("router")]),t._v("目录，包括3个文件")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("index.js")])]),t._v(" "),a("li",[a("code",[t._v("auto-register.js")])]),t._v(" "),a("li",[a("code",[t._v("guards.js")])])]),t._v(" "),a("h2",{attrs:{id:"自动注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动注册"}},[t._v("#")]),t._v(" 自动注册")]),t._v(" "),a("p",[t._v("约定 "),a("code",[t._v("src/views")]),t._v(" 目录及子目录下的 "),a("code",[t._v("*.vue")]),t._v(" 会被自动注册， "),a("code",[t._v("path")]),t._v(" 与文件目录结构保持一致。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  meta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("目录下的 "),a("code",[t._v("index.vue")]),t._v(" 会被作为该目录的主文件，注册的路由为该目录，例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /foo/index.vue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("不是所有的组件都需要注册为路由，所以我们提供了另一个约定。"),a("code",[t._v("components")]),t._v(" 目录下的所有组件均忽略注册。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("+- foo\n  +- components\n    +- component-a.vue\n    +- component-b.vue\n  +- index.vue\n  +- bar.vue\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/views/foo/index.vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo/bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/views/foo/bar.vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"手动注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动注册"}},[t._v("#")]),t._v(" 手动注册")]),t._v(" "),a("p",[t._v("我们默认是自动注册，但是也可以通过设置进行手动注册。在组件中定义一个 "),a("code",[t._v("config")]),t._v(" 对象，配置"),a("strong",[t._v("是否手动注册")]),t._v("属性。框架的所有自定义配置都会放在 "),a("code",[t._v("config")]),t._v(" 对象中，建议将 "),a("code",[t._v("config")]),t._v(" 定义在组件的最前面，以便查看。")]),t._v(" "),a("p",[t._v("如果没有特殊情况，不建议将业务模块手动注册。目前手动注册的都是框架的基础模块，对路由的定义顺序由要求，所以采用手动注册并给自动注册的路由提供一个插入的位置。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    isManuallyRegistered"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动注册")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("，\n  name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Home'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// other vue options")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"自动注册的局限性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动注册的局限性"}},[t._v("#")]),t._v(" 自动注册的局限性")]),t._v(" "),a("p",[t._v("自动注册可以获取到的信息有限，只有组件路径和config中的信息。所以，我们在config中添加了路由的meta对象，后续也可以按照这个思路扩展功能。例如在config中通过配置实现路由的重定向，页面导航名称，路由参数的处理等，后续可能会根据需求扩展。")]),t._v(" "),a("h2",{attrs:{id:"导航钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导航钩子"}},[t._v("#")]),t._v(" 导航钩子")]),t._v(" "),a("p",[t._v("全局导航守卫定义在"),a("code",[t._v("guards.js")]),t._v("中，包括 "),a("code",[t._v("beforeEach")]),t._v(" 和 "),a("code",[t._v("afterEach")]),t._v("。")])])},[],!1,null,null,null);s.default=e.exports}}]);